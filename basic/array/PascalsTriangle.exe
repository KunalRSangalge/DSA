class Solution {
private:
    // int fact(int n){
    //     if(n==0) return 1;
    //     return n*fact(n-1);
    // }
    //cant use factorial -> int cant store large  factorial numbers ans uses more time

    int perm(int n, int r){
        int perm = 1;
        for(int i=0;i<r;i++){
            perm *= (n-i);
            perm /= (i+1);
        }
        return perm;
    }
    vector<int>solve(int i){
        vector<int>op;
        for(int j=0;j<i+1;j++){
            op.push_back(perm(i,j));
        }
        return op;
    }
public:
    vector<vector<int>> generate(int numRows) {
        vector<vector<int>>ans;
        for(int i=0;i<numRows;i++){
            ans.push_back(solve(i));
        }
        return ans;
    }
};