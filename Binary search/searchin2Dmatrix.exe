//dosent work for few test cases

class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int n = matrix.size();
        // int m = matrix[0].size();
        int s = 0, e = n - 1, mid, x;
        while (s <= e) {
            mid = (s + e) / 2;
            if (target <= matrix[mid][0]) {
                x = mid-1;
                break;
            } else
                e = mid - 1;
        }
        int m=matrix[x].size();
        s = 0, e = m - 1;
        while (s <= e) {
            mid = (s + e) / 2;
            if (target == matrix[x][mid])
                return true;
            else if (target > matrix[x][mid])
                s = mid + 1;
            else
                e = mid - 1;
        }
        return false;
    }
};

//optimised
class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int n=matrix.size(),m=matrix[0].size(),row,col;
        int s=0,e=(m*n)-1,mid;

        while(s<=e)
        {
            mid=(s+e)/2;
            row=mid/m;
            col=mid%m;
            if(target == matrix[row][col])
            return true;
            else if(target > matrix[row][col])
            s=mid+1;
            else
            e=mid-1;
        }
        return false;
    }
};